자바에서 데이터는 스트림을 통해 입출력된다.
스트림은 단일 방향으로 연속적으로 흘러가는 것을 뜻한다.
즉, 데이터는 출발지에서 도착지로 흘러간다.

프로그램이 도착지이면 입력 스트림, 출발지이면 출력 스트림을 사용한다.

java.io 패키지에는 여러 가지 종류의 스트림 클래스를 제공한다
1. 바이트 기반 스트림 : 그림, 멀티미디어 등의 바이너리 데이터를 읽고 출력할 때 사용
   - 최상위 클래스
      InputStream, OutputStream
   - 하위 클래스
      XXXInputStream, XXXOutputStream
      (FileInputStream, FileOutputStream) -> 이미지 같은 바이너리 파일 입출력
2. 문자 기반 스트림 : 문자 데이터를 읽고 출력할 때 사용
   - 최상위 클래스
      Reader, Writer
   - 하위 클래스
      XXXReader, XXXWriter
      (FileReader, FileWriter) -> 텍스트 파일 입출력

OutputStream
 - FileOutputStream
 - PrintStream
 - BufferedOutputStream
 - DataOutputStream
InputStream
 - FileInputStream
 - BufferedInputStream
 - DataInputStream
Writer
 - FileWriter
 - BufferedWriter
 - PrintWriter
 - OutputStreamWriter
Reader
 - FileReader
 - BufferedReader
 - InputStreamReader


데이터를 변환해서 입출력하거나, 데이터의 출력 형식을 지정하고 싶을 경우,
그리고 입출력 성능을 향상시키고 싶을 경우가 있다면 기본 스트림에 보조 스트림을 연결하여 사용하면 된다.

보조 스트림이란 다른 스트림과 연결 되어 여러 가지 편리한 기능을 제공해주는 스트림을 말한다.
보조 스트림은 자체적으로 입출력을 수행할 수 없기 때문에 입출력 소스와 바로 연결되는
InputStream, OutputStream, Writer, Reader 등에 연결해서 입출력을 수행한다.
보조 스트림은 문자 변환, 입출력 성능 향상, 기본 타입 입출력 등의 기능을 제공한다.

입력 스트림 -> 보조 스트림 -> 프로그램 -> 보조 스트림 -> 출력스트림

프로그램은 입력 스트림에서 직접 데이터를 읽지 않고, 보조 스트림에서 제공하는 기능을 이용하여 읽는다.
반대로 출력 스트림으로 직접 데이터를 보내지 않고, 보조 스트림에서 제공하는 기능을 이용해서 보낸다.

보조 스트림을 연결하려면 보조 스트림을 생성할 때 자신이 연결될 스트림을 다음과 같이 생성자의 매개값으로 제공하면 된다.
보조스트림 변수 = new 보조스트림(연결스트림);
ex)
InputStream is = ...;
InputStreamReader reader = new InputStreamReader(is);

보조 스트림의 생성자 매개값은 보조 스트림이 될 수도 있다.
즉, 보조 스트림을 연속적으로 연결할 수 있다.

입력 스트림 -> 보조 스트림 -> 보조 스트림 -> 프로그램 -> 보조 스트림 -> 보조 스트림 -> 출력스트림
ex)
InputStream is = System.in;
InputStreamReader reader = new InputStreamReader(is);
BufferedReader br = new BufferedReader(reader);

